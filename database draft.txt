-- Create Users Table
CREATE TABLE Users (
    User_ID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Password VARCHAR(255) NOT NULL
);

-- Create Badminton Tournament Table
CREATE TABLE Badminton_Tournament (
    Bad_Tour_ID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Owner_User_ID INT,
    Location VARCHAR(100) NOT NULL,
    Date DATE NOT NULL,
    Status ENUM('Created', 'Scheduled', 'Completed') DEFAULT 'Created',
    FOREIGN KEY (Owner_User_ID) REFERENCES Users(User_ID)
);

-- Create Tournament_Authorize_User Table
CREATE TABLE Tournament_Authorize_User (
    Bad_Tour_ID INT,
    User_ID INT,
    PRIMARY KEY (Bad_Tour_ID, User_ID),
    FOREIGN KEY (Bad_Tour_ID) REFERENCES Badminton_Tournament(Bad_Tour_ID),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID)
);

-- Create Category Table
CREATE TABLE Category (
    Bad_Tour_ID INT,
    Cat_ID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    Team_Amount INT NOT NULL,
    FOREIGN KEY (Bad_Tour_ID) REFERENCES Badminton_Tournament(Bad_Tour_ID)
);

-- Create Team Table
CREATE TABLE Team (
    Cat_ID INT,
    Team_ID INT AUTO_INCREMENT PRIMARY KEY,
    Team_Name VARCHAR(100) NOT NULL,
    FOREIGN KEY (Cat_ID) REFERENCES Category(Cat_ID)
);

-- Create Score Table
CREATE TABLE Score (
    Score_ID INT,
    Player_1_Score INT NOT NULL,
    Player_2_Score INT NOT NULL
);

-- Create Matches Table
CREATE TABLE Matches (
    Bad_Tour_ID INT,
    Cat_ID INT,
    Match_ID INT AUTO_INCREMENT PRIMARY KEY,
    Score_ID INT AUTO_INCREMENT PRIMARY KEY,
    Team_1_ID INT,
    Team_2_ID INT,
    FOREIGN KEY (Bad_Tour_ID) REFERENCES Badminton_Tournament(Bad_Tour_ID),
    FOREIGN KEY (Cat_ID) REFERENCES Category(Cat_ID),
    FOREIGN KEY (Score_ID) REFERENCES Score(Score_ID),
    FOREIGN KEY (Team_1_ID) REFERENCES Team(Team_ID),
    FOREIGN KEY (Team_2_ID) REFERENCES Team(Team_ID)
);
